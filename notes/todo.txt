solar system asteroids / bodies rendering

add other planets orbiters and altimeter data
    earth, moon, mars, venus, mercury
    rendered side-by-side in synchronised time

table class, load from pds4 Table_Binary, unordered_map of column names -> mdspan of rows (or byte offset, size, stride)

could be cool to try using curlftpfs fuse filesystem to stream LOLA data rather than downloading TBs
maybe with some way of rendering / visualising the whole structure of mission phases / orbits

pointcloud rendering optimisations
    octree for decimation
    octree for culling
    shuffled morton sorted points https://arxiv.org/pdf/2104.07526.pdf
        "Points are first sorted by Morton code, then grouped into batches of 128 points, and finally the batches are shuffled, with points inside each batch remaining in order. Doing so preserves basic locality between points within each batch, but avoids excessive locality that might lead to contention or imbalanced workload."
        "In opposition to these varied results, shuffled Morton order yields peak or close-to-peak performance over all rendering methods, regardless of viewpoint"
        145 million points at 8ms on RTX 3090 (GL_POINTS morton shuffled)



categorise things based on input arity (everything produces one output: pixels)
    generator
        (ideally) completely reusable
        generally dont setup a view matrix
        no pixel inputs
    filter/transformer
        must have pixel inputs
            e.g. inverter, sorter, subgrid, layout
    consumer
        only reusable in filters, hardcoded pipeline
        generally setup a view matrix
        no pixel inputs
    main must have at least one consumer

use the japanese data
    time-series of subjects
        brightness : srs stage
        x-axis is first-seen-time
    time-series of reviews
    time-series of levels
        network of subjects
    network of vocabulary to kanji

decoration
    dot grid flashes every day
    line grid flashes every week
    time axis along the bottom

unicode support
    halfwidth/variablewidth bitmap font support

variable length rects

use c++20 modules for fast compile times without separate header/impl files

smooth (s)lerp camera animation
    slerp between random positions/orientations, chosen every 10 seconds

scene/keyframe animation

shadowed terrain
    maybe orthographic/from infinity projection

use vendored noise glsl function
    https://github.com/patriciogonzalezvivo/lygia/tree/main/generative
    https://github.com/ashima/webgl-noise/tree/master/src

vulkan examples
    calling resize immediately causes a segfault

synchronised audio

imgui/camera controller interaction
    for finding good view matrix parameters
    any other parameters need choosing?
    speed/time
    subset of data
